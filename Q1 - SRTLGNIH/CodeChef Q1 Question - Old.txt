Omprakash created three machines out of which two machines generate random numbers. Whenever new numbers are generated, the number of digits in the number generated by machine 1 is either equal or one more than the number of digits in the number generated by machine 2.
The 3rd Machine concatenates the two numbers to form a new number M.

Omprakash receives N number of M numbers from the 3rd Machine in random order. He has to sort the M numbers in ascending order of the modulus of the difference between the numbers generated by machine 1 and machine 2. In case the differences are equal, he ignores it.

Can you help him to sort the numbers?

Input:
The first line of the input gives the number of test cases, T. T test cases follow.
Each test case consists of two lines.
First line is an integer N and second line is N number of M numbers generated by the 3rd Machine.

Output:
Output contains T lines, each line starts with the string "Case #x: " where 'x' is the test case number. Each line consists of a sorted array.

Constraints
1≤T≤1000
1≤N≤1000
2≤M≤10^5

Sample Input:
2
2
13 21
4
999 386 238 1631

Sample Output:
Case #1: 21 13
Case #2: 238 1631 386 999

EXPLANATION:

Case #1
In 21, difference between 2 and 1 is '1' and in 13, the difference between 1 and 3
is '2'. Since 1 ≤ 3, the order becomes 21 13.

Case #2
In 999, difference between 99 and 9 is 90. In 386, the difference between 38 and 6 is 30. In 238, difference between 23 and 8 is 15 and in 1631, difference between 16 and 31 is 15. Therefore, 15 ≤ 15 ≤ 30 ≤ 90

Notice that the difference '15' is common for both 238 and 1631. Since 23 ≤ 1631, 
238 will come before 1631. So the final order will be '238 1631 386 999'